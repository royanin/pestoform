from flask import render_template
from flask_mail import Message
from app import mail
from .decorators import async
from config import ADMINS
from app import app
from smtplib import SMTPException


@async
def send_async_email(app, msg):
    with app.app_context():
        try:
            mail.send(msg)    
        except SMTPException,e:
            #return str("Please enter a valid email id")
            return str(e)


def send_email(subject, sender, recipients, text_body, html_body):
    msg = Message(subject, sender=sender, recipients=recipients)
    msg.body = text_body
    msg.html = html_body
    send_async_email(app, msg)

def course_view(user,course):
    print 'Hi, this is emails.py course_view'
    send_email("Hi %s !" % user.nickname,
               ADMINS[0],
               [user.email],
               render_template("email_course_view.txt",
                               user=user, course=course),
               render_template("email_course_view.html",
                               user=user, course=course))


def form_open(email,meeting):
    print 'Hi, this is emails.py form_open'
    send_email("Hi %s!" % email,
               ADMINS[0],
               [email],
               render_template("email_form_open.txt",
                               email=email, meeting=meeting),
               render_template("email_form_open.html",
                               email=email, meeting=meeting))
